/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'

    id "io.micronaut.library" version "2.0.3"

//    // Apply the java-library plugin for API and implementation separation.
//    id 'java-library'
//
    // Kotlin annotations processor (needed by Micronaut)
    id 'org.jetbrains.kotlin.kapt' version '1.4.32'
}

micronaut {
    version "2.5.3"
}

repositories {
    mavenCentral()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'



//    implementation("io.micronaut:micronaut-http-server-netty")

//    // Micronaut
//    /// Bill of Materials, which defines dependency versions
//    implementation platform("io.micronaut:micronaut-bom:2.5.3")
    kapt platform("io.micronaut:micronaut-bom:2.5.3")
////    kaptTest platform("io.micronaut:micronaut-bom:2.5.3")
//    // Core
//    implementation "io.micronaut:micronaut-runtime"
//    implementation "javax.annotation:javax.annotation-api"
    /// Inversion of Control / Dependency Injection
    kapt "io.micronaut:micronaut-inject-java"
//    kaptTest "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
}
